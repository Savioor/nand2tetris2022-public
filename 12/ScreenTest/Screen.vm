function Screen.init 0
push constant 0
not
pop static 0
push constant 16384
pop static 1
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 4096
lt
not
if-goto WHILE_END0
push local 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 2
push argument 1
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
push argument 0
shiftright
shiftright
shiftright
shiftright
add
pop local 0
push constant 1
pop local 1
push argument 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
shiftleft
pop local 1
label IF_FALSE0
push argument 0
shiftright
pop argument 0
push argument 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
shiftleft
shiftleft
pop local 1
label IF_FALSE1
push argument 0
shiftright
pop argument 0
push argument 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
shiftleft
shiftleft
shiftleft
shiftleft
pop local 1
label IF_FALSE2
push argument 0
shiftright
pop argument 0
push argument 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
pop local 1
label IF_FALSE3
push local 0
push local 1
call Screen.applyMask 2
pop temp 0
push constant 0
return
function Screen.applyMask 0
push static 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
not
pop argument 1
push argument 0
push static 1
add
push argument 0
push static 1
add
pop pointer 1
push that 0
push argument 1
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE0
push argument 0
push static 1
add
push argument 0
push static 1
add
pop pointer 1
push that 0
push argument 1
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Screen.copySign 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
return
label IF_FALSE0
push argument 0
return
function Screen.drawLine 6
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 0
push argument 2
call Screen.drawStraightY 3
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 2
push argument 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 2
push argument 3
push argument 0
push argument 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 2
push argument 0
sub
pop local 0
push argument 3
push argument 1
sub
pop local 1
push local 1
call Math.abs 1
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
push constant 0
pop local 5
label WHILE_EXP0
push local 4
push local 0
gt
not
push local 5
push local 2
gt
not
and
not
if-goto WHILE_END0
push argument 0
push local 4
add
push argument 1
push local 5
push local 1
call Screen.copySign 2
add
call Screen.drawPixel 2
pop temp 0
push local 3
push constant 0
gt
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 5
push constant 1
add
pop local 5
push local 3
push local 0
add
pop local 3
goto IF_END2
label IF_FALSE2
push local 4
push constant 1
add
pop local 4
push local 3
push local 2
sub
pop local 3
label IF_END2
goto WHILE_EXP0
label WHILE_END0
push argument 2
push argument 3
call Screen.drawPixel 2
pop temp 0
push constant 0
return
function Screen.drawStraightY 6
push argument 1
push argument 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 0
call Screen.drawPixel 2
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push argument 2
call Math.min 2
pop local 0
push argument 1
push argument 2
call Math.max 2
pop local 1
push argument 0
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
push local 0
shiftright
shiftright
shiftright
shiftright
add
pop local 2
push argument 0
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
push local 1
shiftright
shiftright
shiftright
shiftright
add
pop local 3
push constant 1
pop local 4
push local 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
shiftleft
pop local 4
label IF_FALSE1
push local 0
shiftright
pop local 0
push local 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
shiftleft
shiftleft
pop local 4
label IF_FALSE2
push local 0
shiftright
pop local 0
push local 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
shiftleft
shiftleft
shiftleft
shiftleft
pop local 4
label IF_FALSE3
push local 0
shiftright
pop local 0
push local 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 4
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
pop local 4
label IF_FALSE4
push local 4
push constant 1
sub
not
pop local 4
push constant 1
pop local 5
push local 1
push constant 1
and
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 5
shiftleft
pop local 5
label IF_FALSE5
push local 1
shiftright
pop local 1
push local 1
push constant 1
and
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 5
shiftleft
shiftleft
pop local 5
label IF_FALSE6
push local 1
shiftright
pop local 1
push local 1
push constant 1
and
push constant 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 5
shiftleft
shiftleft
shiftleft
shiftleft
pop local 5
label IF_FALSE7
push local 1
shiftright
pop local 1
push local 1
push constant 1
and
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 5
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
pop local 5
label IF_FALSE8
push local 5
shiftleft
push constant 1
sub
pop local 5
push local 2
push local 3
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 4
push local 5
and
pop local 4
push local 2
push local 4
call Screen.applyMask 2
pop temp 0
push constant 0
return
label IF_FALSE9
push local 2
push local 4
call Screen.applyMask 2
pop temp 0
push local 3
push local 5
call Screen.applyMask 2
pop temp 0
push constant 0
not
pop local 4
push local 2
push constant 1
add
pop local 2
label WHILE_EXP0
push local 2
push local 3
lt
not
if-goto WHILE_END0
push local 2
push local 4
call Screen.applyMask 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 2
push argument 1
push argument 3
call Math.min 2
pop local 0
push argument 1
push argument 3
call Math.max 2
pop local 1
label WHILE_EXP0
push local 0
push local 1
gt
not
not
if-goto WHILE_END0
push local 0
push argument 0
push argument 2
call Screen.drawStraightY 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
push argument 2
call Math.multiply 2
pop local 0
push argument 2
neg
pop local 1
label WHILE_EXP0
push local 1
push argument 2
gt
not
not
if-goto WHILE_END0
push local 0
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 2
push argument 1
push local 1
add
push argument 0
push local 2
sub
push argument 0
push local 2
add
call Screen.drawStraightY 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
