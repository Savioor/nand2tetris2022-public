// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];    
	
    PARTS:
    
    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    
    Register(in=in, out=out0, load=a);
    Register(in=in, out=out1, load=b);
    Register(in=in, out=out2, load=c);
    Register(in=in, out=out3, load=d);
    Register(in=in, out=out4, load=e);
    Register(in=in, out=out5, load=f);
    Register(in=in, out=out6, load=g);
    Register(in=in, out=out7, load=h);
    
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address,
    out=out);
    
}
